@using Elwark.Account.Shared.Password
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<CreatePassword> L
<EditForm Model="@Model" OnValidSubmit="@OnCreate" class="card">
    <FluentValidator/>
    <div class="card-body">

        <div class="form-group">
            <label>@L["New password"]</label>
            <InputText type="password" @bind-Value="Model.Password" class="form-control" placeholder="@L["New password"]"/>
            <ValidationMessage For="@(() => Model.Password)"/>
        </div>

        <div class="form-group">
            <label>@L["Confirm new password"]</label>
            <InputText type="password" @bind-Value="Model.Confirmation" class="form-control" placeholder="@L["Confirm new password"]"/>
            <ValidationMessage For="@(() => Model.Confirmation)"/>
        </div>

        <div class="form-group">
            <label>@L["Confirmation code"]</label>
            <div class="input-group mb-3">
                <InputNumber @bind-Value="Model.Code" class="form-control" placeholder="@L["Confirmation code"]"/>
                <div class="input-group-append">
                    <LoadingButton IsLoading="@IsCodeSending" OnClick="@OnConfirmationRequest" Title="@L["Request code"]" Icon="fa-qrcode"/>
                </div>
            </div>
            <ValidationMessage For="@(() => Model.Code)"/>
        </div>

        <div class="row">
            <div class="col-auto">
                <LoadingButton IsLoading="@IsLoading" Type="submit" Title="@L["Create password"]" Icon="fa-shield-alt"/>
            </div>
        </div>

    </div>
</EditForm>

@code {

    [Parameter]
    public CreatePasswordModel Model { get; set; }

    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public bool IsCodeSending { get; set; }

    [Parameter]
    public EventCallback OnCreate { get; set; }

    [Parameter]
    public EventCallback OnConfirmationRequest { get; set; }

}