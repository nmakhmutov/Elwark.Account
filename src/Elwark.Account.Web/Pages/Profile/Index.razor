@page "/"
@using Elwark.Account.Web.State
@using Elwark.Account.Shared.AccountService
@using Elwark.Account.Shared.AccountService.Model
@inject IAccountService AccountService
@inject IToaster Toaster
@inject AccountStateProvider AccountStateProvider

@attribute [Authorize]

@if (Account is null)
{
    <PageLoading/>
}
else
{
    <EditForm Model="@Account" OnValidSubmit="@HandleValidSubmit" class="container">
        <FluentValidator/>

        <div class="row justify-content-between m-b">
            <div class="col-auto mr-auto">
                <h2 class="mb-0">Profile</h2>
                <p class="text-muted">
                    Manage your profile information.
                </p>
            </div>
            <div class="col-auto">
                <LoadingButton IsLoading="@_isLoading" Icon="fa-edit" Type="submit"/>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="avatar-edit mx-auto mb-2">
                    <img src="@(Account.Picture)" alt="@Account.FullName"/>
                    <div class="overlay"></div>
                    <div class="button">
                        <button type="button" @onclick="@OnImageDialogOpen" class="btn btn-outline-light">Change</button>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <div class="form-group">
                            <label>First name</label>
                            <InputText @bind-Value="Account.FirstName" class="form-control" placeholder="First name"/>
                            <ValidationMessage For="@(() => Account.FirstName)"/>
                        </div>

                        <div class="form-group">
                            <label>Last name</label>
                            <InputText @bind-Value="Account.LastName" class="form-control" placeholder="Last name"/>
                            <ValidationMessage For="@(() => Account.LastName)"/>
                        </div>

                        <div class="form-group">
                            <label>Nickname</label>
                            <InputText @bind-Value="Account.Nickname" class="form-control" placeholder="Nickname"/>
                            <ValidationMessage For="@(() => Account.Nickname)"/>
                        </div>

                        <div class="form-group">
                            <label>Bio</label>
                            <InputTextArea @bind-Value="Account.Bio" class="form-control" placeholder="Bio"/>
                            <ValidationMessage For="@(() => Account.Bio)"/>
                        </div>

                    </div>
                </div>

            </div>
            <div class="col-md-6">

                <div class="card">
                    <div class="card-body">

                        <div class="form-group">
                            <label>Birthday</label>
                            <InputDate @bind-Value="Account.Birthdate"
                                        class="form-control"
                                        max="@DateTime.Today.AddDays(-1).ToString("yyyy-MM-dd")"
                                        min="@DateTime.Today.AddYears(-120).ToString("yyyy-MM-dd")"
                                        placeholder="Birthday"/>
                            <ValidationMessage For="@(() => Account.Birthdate)"/>
                        </div>

                        <div class="form-group">
                            <label>Sex</label>
                            <GenderSelect @bind-Value="Account.Gender" class="form-control"/>
                            <ValidationMessage For="@(() => Account.Gender)"/>
                        </div>

                        <div class="form-group">
                            <label>Language</label>
                            <LanguageSelect @bind-Value="Account.Language" class="form-control"/>
                            <ValidationMessage For="@(() => Account.Language)"/>
                        </div>

                    </div>
                </div>

                <div class="card">
                    <div class="card-body">

                        <div class="form-group">
                            <label>Country</label>
                            <CountrySelect @bind-Value="Account.CountryCode" class="form-control"/>
                            <ValidationMessage For="@(() => Account.CountryCode)"/>
                        </div>

                        <div class="form-group">
                            <label>City</label>
                            <InputText @bind-Value="@Account.City" class="form-control" placeholder="City"/>
                            <ValidationMessage For="@(() => Account.City)"/>
                        </div>

                        <div class="form-group">
                            <label>Time zone</label>
                            <TimezoneSelect @bind-Value="Account.Timezone" class="form-control"/>
                            <ValidationMessage For="@(() => Account.Timezone)"/>
                        </div>

                    </div>
                </div>

            </div>
        </div>

        <div class="row justify-content-between m-b">
            <div class="col-auto mr-auto">
                <p class="text-muted">
                    Manage your external links.
                </p>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Facebook)</label>
                                <InputText @bind-Value="@Account.Links.Facebook" class="form-control" placeholder="@nameof(Account.Links.Facebook)"/>
                                <ValidationMessage For="@(() => Account.Links.Facebook)"/>
                            </div>
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Twitter)</label>
                                <InputText @bind-Value="@Account.Links.Twitter" class="form-control" placeholder="@nameof(Account.Links.Twitter)"/>
                                <ValidationMessage For="@(() => Account.Links.Twitter)"/>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.LinkedIn)</label>
                                <InputText @bind-Value="@Account.Links.LinkedIn" class="form-control" placeholder="@nameof(Account.Links.LinkedIn)"/>
                                <ValidationMessage For="@(() => Account.Links.LinkedIn)"/>
                            </div>
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Github)</label>
                                <InputText @bind-Value="@Account.Links.Github" class="form-control" placeholder="@nameof(Account.Links.Github)"/>
                                <ValidationMessage For="@(() => Account.Links.Github)"/>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Dribbble)</label>
                                <InputText @bind-Value="@Account.Links.Dribbble" class="form-control" placeholder="@nameof(Account.Links.Dribbble)"/>
                                <ValidationMessage For="@(() => Account.Links.Dribbble)"/>
                            </div>
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Medium)</label>
                                <InputText @bind-Value="@Account.Links.Medium" class="form-control" placeholder="@nameof(Account.Links.Medium)"/>
                                <ValidationMessage For="@(() => Account.Links.Medium)"/>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Website)</label>
                                <InputText @bind-Value="@Account.Links.Website" class="form-control" placeholder="@nameof(Account.Links.Website)"/>
                                <ValidationMessage For="@(() => Account.Links.Website)"/>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

    </EditForm>
}

@code{

    [CascadingParameter]
    private AccountModel Account { get; set; } = null!;

    [CascadingParameter]
    private IModalService Modal { get; set; } = null!;

    private bool _isLoading;

    private async Task HandleValidSubmit()
    {
        _isLoading = true;

        var result = await AccountService.UpdateAsync(Account!);
        if (result.IsSuccess)
        {
            AccountStateProvider.Update(result.Data);
            Toaster.Success("Updated");
        }
        else
        {
            Toaster.Error(result.Error?.Detail);
        }

        _isLoading = false;
    }

    private void OnImageDialogOpen()
    {
        var parameters = new ModalParameters();
        parameters.Add("Picture", Account?.Picture);

        Modal.Show<ImageModal>("Picture",
            parameters,
            new ModalOptions
            {
                DisableBackgroundCancel = true,
                Position = ModalPosition.Center
            });
    }

}