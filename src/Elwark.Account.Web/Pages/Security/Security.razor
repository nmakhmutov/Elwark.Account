@page "/security"
@using Elwark.Account.Web.Services.PasswordService.Model
@inject IPasswordService PasswordService
@inject IToaster Toaster

@attribute [Authorize]

<div class="container">
    <div class="row justify-content-between m-b">
        <div class="col-auto mr-auto">
            <h2 class="mb-0">Security</h2>
            <p class="text-muted">
                Manage your password.
            </p>
        </div>
    </div>

    @if (_isPasswordAvailable is null)
    {
        <PageLoading/>
    }
    else
    {
        <div class="row">
            <div class="col-md-6">
                @if (_isPasswordAvailable.Value)
                {
                    <UpdatePassword OnValidSubmit="@UpdateSubmit"/>
                }
                else
                {
                    <CreatePassword OnRequestCodeSubmit="@CodeSubmit" OnValidSubmit="@CreateSubmit"/>
                }
            </div>
        </div>
    }
</div>

@code{
    private bool? _isPasswordAvailable;

    protected override async Task OnInitializedAsync()
    {
        var result = await PasswordService.IsAvailableAsync();
        
        if (result.IsSuccess)
            _isPasswordAvailable = result.Data;
        else
            Toaster.Error(result.Error?.Detail);
    }

    private async Task CodeSubmit()
    {
        var result = await PasswordService.SendCodeAsync();

        if (result.IsSuccess)
            Toaster.Success("Code sent");
        else
            Toaster.Error(result.Error?.Detail);
    }

    private async Task CreateSubmit(CreatePasswordModel model)
    {
        var result = await PasswordService.CreateAsync(model);

        if (result.IsSuccess)
        {
            Toaster.Success("Password updated");
            _isPasswordAvailable = true;
        }
        else
        {
            Toaster.Error(result.Error?.Detail);
        }
    }

    private async Task UpdateSubmit(UpdatePasswordModel model)
    {
        var result = await PasswordService.UpdateAsync(model);
        
        if(result.IsSuccess)
            Toaster.Success("Password updated");
        else
            Toaster.Error(result.Error?.Detail);
    }

}