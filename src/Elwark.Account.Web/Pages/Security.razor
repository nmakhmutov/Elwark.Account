@page "/security"
@inject PasswordState State

@attribute [Authorize]

<div class="container">
    <div class="row justify-content-between m-b">
        <div class="col-auto mr-auto">
            <h2 class="mb-0">Security</h2>
            <p class="text-muted">
                Manage your password.
            </p>
        </div>
    </div>

    @if (State.IsPasswordAvailable is null)
    {
        <PageLoading/>
    }
    else
    {
        <div class="row">
            <div class="col-md-6">
                @if (State.IsPasswordAvailable.Value)
                {
                    <UpdatePassword
                        Model="@State.UpdateModel" 
                        IsLoading="@State.IsLoading" 
                        OnUpdate="@State.UpdateAsync"/>
                }
                else
                {
                    <CreatePassword 
                        Model="@State.CreateModel" 
                        IsLoading="@State.IsLoading"
                        OnCreate="@State.CreateAsync"
                        IsCodeSending="@State.IsCodeSending"
                        OnConfirmationRequest="@State.RequestConfirmationAsync"/>
                }
            </div>
        </div>
    }
</div>

@code{

    protected override Task OnInitializedAsync() =>
        State.InitializeAsync();

}