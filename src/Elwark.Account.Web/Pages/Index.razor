@page "/"
@using Elwark.Account.Shared.Account

@inject AccountState State
@inject IElwarkStorageClient StorageClient
@inject IStringLocalizer<Index> L

@attribute [Authorize]

@if (Account is null && _countries is null && _timezones is null)
{
    <PageLoading/>
}
else
{
    <EditForm Model="@Account" OnValidSubmit="@State.UpdateAsync" class="container">
        <FluentValidator/>

        <PageHeader Title="@L["Profile"]" Subtitle="@L["Manage your profile information"]">
            <HeaderAside>
                <LoadingButton IsLoading="@State.IsLoading" Title="@L["Update"]" Icon="fa-edit" Type="submit"/>
            </HeaderAside>
        </PageHeader>

        <div class="row">
            <div class="col-md-6">

                <div class="card">
                    <div class="card-body">
                        <div class="form-group">
                            <label>First name</label>
                            <InputText @bind-Value="Account.FirstName" class="form-control" placeholder="First name"/>
                            <ValidationMessage For="@(() => Account.FirstName)"/>
                        </div>

                        <div class="form-group">
                            <label>@L["Last name"]</label>
                            <InputText @bind-Value="Account.LastName" class="form-control" placeholder="@L["Last name"]"/>
                            <ValidationMessage For="@(() => Account.LastName)"/>
                        </div>

                        <div class="form-group">
                            <label>@L["Nickname"]</label>
                            <InputText @bind-Value="Account.Nickname" class="form-control" placeholder="@L["Nickname"]"/>
                            <ValidationMessage For="@(() => Account.Nickname)"/>
                        </div>

                        <div class="form-group">
                            <label>@L["Bio"]</label>
                            <InputTextArea @bind-Value="Account.Bio" class="form-control" placeholder="@L["Bio"]"/>
                            <ValidationMessage For="@(() => Account.Bio)"/>
                        </div>

                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <PictureEditor/>
                    </div>
                </div>

            </div>
            <div class="col-md-6">

                <div class="card">
                    <div class="card-body">

                        <div class="form-group">
                            <label>@L["Birthday"]</label>
                            <InputDate @bind-Value="Account.Birthdate"
                                        class="form-control"
                                        max="@DateTime.Today.AddDays(-1).ToString("yyyy-MM-dd")"
                                        min="@DateTime.Today.AddYears(-120).ToString("yyyy-MM-dd")"
                                        placeholder="@L["Birthday"]"/>
                            <ValidationMessage For="@(() => Account.Birthdate)"/>
                        </div>

                        <div class="form-group">
                            <label>@L["Sex"]</label>
                            <GenderSelect @bind-Value="Account.Gender" class="form-control"/>
                            <ValidationMessage For="@(() => Account.Gender)"/>
                        </div>

                        <div class="form-group">
                            <label>@L["Language"]</label>
                            <LanguageSelect @bind-Value="Account.Language" class="form-control"/>
                            <ValidationMessage For="@(() => Account.Language)"/>
                        </div>

                    </div>
                </div>

                <div class="card">
                    <div class="card-body">

                        <div class="form-group">
                            <label>@L["Country"]</label>
                            <DictionarySelect
                                @bind-Value="Account.CountryCode"
                                 Values="@_countries"
                                 IsOptional="true"
                                 class="form-control"/>
                            <ValidationMessage For="@(() => Account.CountryCode)"/>
                        </div>

                        <div class="form-group">
                            <label>@L["City"]</label>
                            <InputText @bind-Value="@Account.City" class="form-control" placeholder="@L["City"]"/>
                            <ValidationMessage For="@(() => Account.City)"/>
                        </div>

                        <div class="form-group">
                            <label>@L["TimeZone"]</label>
                            <DictionarySelect
                                @bind-Value="Account.Timezone"
                                 Values="@_timezones"
                                 IsOptional="true"
                                 class="form-control"/>
                            <ValidationMessage For="@(() => Account.Timezone)"/>
                        </div>

                    </div>
                </div>

            </div>
        </div>

        <div class="row justify-content-between m-b">
            <div class="col-auto mr-auto">
                <p class="text-muted">
                    @L["Manage your external links"]
                </p>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body">

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Facebook)</label>
                                <InputText @bind-Value="@Account.Links.Facebook" class="form-control" placeholder="@nameof(Account.Links.Facebook)"/>
                                <ValidationMessage For="@(() => Account.Links.Facebook)"/>
                            </div>
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Twitter)</label>
                                <InputText @bind-Value="@Account.Links.Twitter" class="form-control" placeholder="@nameof(Account.Links.Twitter)"/>
                                <ValidationMessage For="@(() => Account.Links.Twitter)"/>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.LinkedIn)</label>
                                <InputText @bind-Value="@Account.Links.LinkedIn" class="form-control" placeholder="@nameof(Account.Links.LinkedIn)"/>
                                <ValidationMessage For="@(() => Account.Links.LinkedIn)"/>
                            </div>
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Github)</label>
                                <InputText @bind-Value="@Account.Links.Github" class="form-control" placeholder="@nameof(Account.Links.Github)"/>
                                <ValidationMessage For="@(() => Account.Links.Github)"/>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Dribbble)</label>
                                <InputText @bind-Value="@Account.Links.Dribbble" class="form-control" placeholder="@nameof(Account.Links.Dribbble)"/>
                                <ValidationMessage For="@(() => Account.Links.Dribbble)"/>
                            </div>
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Medium)</label>
                                <InputText @bind-Value="@Account.Links.Medium" class="form-control" placeholder="@nameof(Account.Links.Medium)"/>
                                <ValidationMessage For="@(() => Account.Links.Medium)"/>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label>@nameof(Account.Links.Website)</label>
                                <InputText @bind-Value="@Account.Links.Website" class="form-control" placeholder="@nameof(Account.Links.Website)"/>
                                <ValidationMessage For="@(() => Account.Links.Website)"/>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

    </EditForm>
}

@code{

    private AccountModel Account => State.Account;
    private static IReadOnlyDictionary<string, string> _countries;
    private static IReadOnlyDictionary<string, string> _timezones;

    protected override async Task OnInitializedAsync()
    {
        if (_countries == null)
        {
            var countries = await StorageClient.Country.GetAllAsync();
            _countries = Equals(CultureInfo.CurrentCulture, CultureInfo.GetCultureInfo("en"))
                ? countries.Select(x => new KeyValuePair<string, string>(x.Alpha2Code, x.Name.Common))
                    .OrderBy(x => x.Key)
                    .ToDictionary(x => x.Key, x => x.Value)
                : countries.Select(x => new KeyValuePair<string, string>(
                    x.Alpha2Code,
                    x.Translations.FirstOrDefault(t => t.Language == CultureInfo.CurrentCulture.ThreeLetterWindowsLanguageName)?.Common ?? x.Name.Common)
                    )
                    .OrderBy(x => x.Key)
                    .ToDictionary(x => x.Key, x => x.Value);
        }

        _timezones ??= (await StorageClient.Timezone.GetAllAsync())
            .ToDictionary(x => x.Zone, x => $"{x.Zone} ({x.Gmt.Name})");
    }

}